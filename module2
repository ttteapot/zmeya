#-------------------------------------------------------------------------------
# Name:        module1
# Purpose:
#
# Author:      Pankov V.V.
#
# Created:     01.04.2019
# Copyright:   (c) Brain 2019
# Licence:     <your licence>
#-------------------------------------------------------------------------------
import threading
import time

#метод вызывается при создании потока, засыпает и печатает
def createNapom(timeSec, text):
    time.sleep(int(timeSec))
    print('\nНапоминание: ' + text)

#ввод данных, проверка на пустое поле
def inputData():
    startText = "Введите кол-во секунд и сообщение через двоеточие :"
    text = ''
    while True:
        print (startText)
        text = input()
        if text == '':
            print('Ошибка. Поле пустое.')
            #если поле пустое - выведет напоминание и будет крутить в цикле
        else:
            break #выход из цикла, если что-то есть
    return text

# осовной метод - главный трэд
def main():
    print ('Старт программы.')
    print ('Для выхода введите q')
    text = ''
    threads = [] #массив трэдов - сообщений

#бесконечный цикл
    while True:
        text = inputData()
        # выход
        if text == 'q':
            break

        #делим по двоеточию
        data = text.split(':')

        #ели после деления размер массива не 2 - сброс цикла
        if len(data) == 2:
            if data[1].strip() == '': # если сообщение пустое - сброс
                print('Ошибка.Сообщение пустое.')
                continue
            data[0] = data[0].strip() #метод обрезает пробелы
        else:
            print('Ошибка. Неправильный формат данных.')
            continue #возврат в начало цикла

        if data[0].isdigit(): #явлется целым положительным числом (т.е. символы - , . для дробных и отрицательных не пропустит)
            print('Напоминание принято!')
            thread = threading.Thread(target=createNapom, args=(data[0], data[1]))
            thread.start()
            threads.append(thread)
        else:
            print('Ошибка. Введите положительное целое число.')
            continue #возврат в начало цикла

    print ('Выход из программы. Ожидаем завершения уведомлений.')

    #ждем пока потоки выполнятся, если вышли из цикла\основного трэда
    for thread in threads:
        thread.join()

    #чтоб сразу не вышло и прочитать уведомления
    time.sleep(2)

# стартуем отсюда
if __name__ == '__main__':
    main()

